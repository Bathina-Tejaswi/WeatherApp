@page "/weather"
@inject HttpClient Http

<h3>Weather Search</h3>

<div class="d-flex align-items-center mb-3" style="gap: 20px;">
    <!-- Saved Cities Dropdown on the left -->
    <div style="flex: 1;">
        <label for="savedCities" class="form-label">Saved Cities:</label>
        <select id="savedCities" class="form-select" @onchange="OnCitySelected" style="padding: 8px 12px;">
            <option value="">-- Select City --</option>
            @foreach (var saved in savedCities)
            {
                <option value="@saved.CityName" selected="@(saved.CityName == city)">
                    @saved.CityName
                </option>
            }
        </select>
    </div>

    <!-- Search input and button on the right -->
    <div class="d-flex" style="flex: 2; gap: 10px; align-items: flex-end;">
        <input @bind="city" placeholder="Enter city" class="form-control" style="padding: 8px 12px;" />
        <button @onclick="SearchWeather" class="btn btn-primary" style="padding: 8px 20px;">Search</button>
    </div>
</div>

@if (!string.IsNullOrWhiteSpace(temp))
{
    <p><strong>@city:</strong> @temp °C</p>
}



@code {
    private string city = "";
    private string temp = "";
    private List<WeatherApp1.Shared.CitySearch> savedCities = new();

    protected override async Task OnInitializedAsync()
    {
        savedCities = await Http.GetFromJsonAsync<List<WeatherApp1.Shared.CitySearch>>("api/CitySearches") ?? new();
    }

    private async Task SearchWeather()
    {
        if (string.IsNullOrWhiteSpace(city))
            return;
        var apiKey = "YOUR_API_KEY"; // Replace with your OpenWeatherMap key
        var response = await Http.GetFromJsonAsync<WeatherResult>($"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={apiKey}&units=metric");
        if (response != null)
        {
            temp = response.main.temp.ToString();
            await Http.PostAsJsonAsync("api/CitySearches", new WeatherApp1.Shared.CitySearch { CityName = city });
            savedCities = await Http.GetFromJsonAsync<List<WeatherApp1.Shared.CitySearch>>("api/CitySearches") ?? new();
        }
    }

    private async Task OnCitySelected(ChangeEventArgs e)
    {
        var selectedCity = e.Value?.ToString();
        if (!string.IsNullOrWhiteSpace(selectedCity))
        {
            city = selectedCity;
            await SearchWeather();
        }
    }

    private async Task LoadWeather(string cityName)
    {
        city = cityName;
        await SearchWeather();
    }

    public class WeatherResult
    {
        public MainData main { get; set; }
        public class MainData { public float temp { get; set; } }
    }
}

